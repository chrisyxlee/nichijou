$icon-size: 20px;
$svg-styles: (
  height: $icon-size,
  width: $icon-size,
);

// Override the default SCSS function which fails with incompatible units.
@function max($args...) {
  @return #{"max(" + $args + ")"};
}
@function min($args...) {
  @return #{"min(" + $args + ")"};
}

.icon-container {
  display: inline-flex;
  align-items: center;

  svg {
    vertical-align: bottom;

    @each $rule, $value in $svg-styles {
      #{$rule}: $value;
    }
  }

  .text {
    margin-left: 2px;
  }
}

.pics-list-container {
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  width: 100vw;

  // Position the children
  display: flex;
  flex-direction: column;
  align-items: flex-start;

  .pics-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    width: 100%;

    .pics-card {
      // So that when you resize the window, the images are not resizing too aggressively.
      $max-pic-width: 600px;
      $breakpoints: (($max-pic-width, 50%), (1000px, 33%), (1500px, 25%));

      @for $i from 1 through length($breakpoints) {
        $bp: nth($breakpoints, $i);
        $max-width: null;
        @if $i < length($breakpoints) {
          $max-width: nth(nth($breakpoints, $i + 1), 1);
        }
        $min-width: nth($bp, 1);
        $set-width: nth($bp, 2);

        @if $i == 1 {
          $media-query: "(max-width: #{$max-width})";
          @media #{$media-query} {
            width: min(100%, $max-pic-width);
          }
        }

        $media-query: "(min-width: #{$min-width})";
        @if $max-width != null {
          $media-query: "(min-width: #{$min-width}) and (max-width: #{$max-width})";
        }

        @media #{$media-query} {
          width: min($set-width, $max-pic-width);
        }
      }

      .pics-container {
        width: 100%;
        height: 100%;
        aspect-ratio: 1 / 1;
        position: relative;
        display: inline-block;

        overflow: hidden;

        &:hover {
          .pics-overlay {
            opacity: 1;
          }
        }

        .pics-overlay {
          // Positioning
          position: absolute;
          top: 0;
          left: 0;
          // Sizing
          width: 100%;
          height: 100%;

          // Transition
          background-color: rgba(0, 0, 0, 0.6);
          opacity: 0;
          transition: opacity 0.3s ease;

          // Aligning Content
          align-items: center;
          text-align: left;
          vertical-align: middle;
          display: flex;
          flex-wrap: wrap;
          justify-content: left;

          overflow-y: scroll;
          overflow-x: wrap;
          padding: 20px;

          .pics-title {
            flex: 0 0 100%;
            font-weight: bold;
            font-size: large;

            a {
              text-decoration: none;

              &:hover {
                color: #919191;
              }
            }
          }

          .pics-header {
            width: 100%;
            margin-bottom: 8px;
          }

          .pics-footer {
            margin-top: 8px;
          }

          .pics-location {
            flex: 0 0 75%;
          }

          .pics-summary {
            flex: 0 0 100%;
          }

          .pics-tags {
            flex: 0 0 100%;
          }
        }

        img {
          width: 100%;
          height: 100%;
          // Maintain aspect ratio
          object-fit: cover;
        }
      }
    }
  }
}
